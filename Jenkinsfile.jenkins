node {
    checkout scm
    def branch = env.BRANCH_NAME ?: 'master'
    def curStage = 'Start'
    def emailList = EMAIL_NOTIFICATION_LIST ?: 'thomas.ramirez@osi.ca.gov'

    try {
        checkout scm

        stage('Write variable files') {
            stage = 'Write variable files'
            writeFile file: './hosts', text: HOSTS
        }

        stage('Launch') {
            curStage = 'Launch'
            withCredentials([[$class: 'UsernamePasswordMultiBinding', credentialsId: 'JenkinsSlave',
                    usernameVariable: 'JENKINS_USERNAME', passwordVariable: 'JENKINS_PASSWORD'],
                    [$class: 'FileBinding', credentialsId: 'AWS_SSH_KEY', variable: 'KEY_FILE']]) {
                sh 'ansible-playbook -u ec2-user -i ./hosts --key-file=$KEY_FILE --skip-tags=local_dependencies --extra-vars="numSlaves=$NUM_SLAVES jenkinsUsername=$JENKINS_USERNAME jenkinsPassword=$JENKINS_PASSWORD" config-jenkins-slaves.yml'
            }
        }
    }
    catch (e) {
//        emailext (
//            to: emailList,
//            subject: "FAILED: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' in stage ${curStage}",
//            body: """<p>FAILED: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' in stage '${curStage}' for branch '${branch}':</p>
//                <p>Check console output at &QUOT;<a href='${env.BUILD_URL}'>${env.JOB_NAME} [${env.BUILD_NUMBER}]</a>&QUOT;</p>"""
//        )
        throw e
    }
    finally {
        stage('Clean') {
            sh 'rm -rf .* * 2>/dev/null || true'
        }
    }
}
