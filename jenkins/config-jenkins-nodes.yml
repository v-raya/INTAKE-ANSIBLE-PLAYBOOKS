---

- hosts: jenkins-host
  connection: local
  gather_facts: no
  become: yes

  vars:
    baseurl: http://mirror.sfo12.us.leaseweb.net/epel//7Server/x86_64/
    gpgkey: https://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-7
    secrets_bucket: accelerator-s3-secrets
    ssl_key_file: mycasebook.key
    ssl_crt_file: mycasebook.crt

  tasks:

  - name: Add EPEL repository
    yum_repository:
      name: epel
      description: EPEL YUM repo
      baseurl: '{{ baseurl }}'
      gpgkey: '{{ gpgkey }}'
      gpgcheck: yes

  - name: install misc packages
    yum: name={{ item }} state=present
    with_items:
    - python-pip
    - vim
    - wget
    - curl

  - name: Install boto
    pip: name=boto state=present

  - name: Ensure tmp directory exists
    file: path=./tmp state=directory mode=777

  - name: Copy ssl certs from s3
    s3:
      bucket: '{{ secrets_bucket }}'
      object: '{{ item }}'
      dest: './tmp/{{ item }}'
      mode: get
    with_items:
    - '{{ ssl_crt_file }}'
    - '{{ ssl_key_file }}'
    tags: nginx

  - name: Copy datadog key to local
    s3:
      bucket: '{{ secrets_bucket }}'
      object: 'dd-agent.key'
      dest: './tmp/dd-agent.key'
      mode: get
    tags: s3

- hosts: jenkins-node
  connection: ssh
  user: ec2-user
  become: yes
  gather_facts: yes

  vars:
    baseurl: http://mirror.sfo12.us.leaseweb.net/epel//7Server/x86_64/
    gpgkey: https://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-7
    project_source: /home/ec2-user
    docker_gid: 1200
    docker_uid: 1200

  vars_prompt:
  - name: "username"
    prompt: "Enter docker username"
    private: no
  - name: "email"
    prompt: "Enter docker email"
    private: no
  - name: "password"
    prompt: "Enter docker password"
    private: yes


  pre_tasks:
  - name: Add EPEL repository
    yum_repository:
      name: epel
      description: EPEL YUM repo
      baseurl: '{{ baseurl }}'
      gpgcheck: yes
      gpgkey: '{{ gpgkey }}'

  - name: install misc packages
    yum: name={{ item }} state=present
    with_items:
    - python-pip
    - vim
    - wget
    - curl
    - telnet

  - name: Ensure group 'docker' exists
    group: name=docker state=present gid={{ docker_gid }}

  - name: Ensure the 'docker' user exists
    user: name=docker group=docker state=present uid={{ docker_uid }}


  roles:
  - dochang.docker


  post_tasks:
  # This would restart docker (required) if any of the port changes. Beware, removing ports won't restart docker.
  - name: Open up ports for http and https
    iptables: state=present chain=INPUT source=0.0.0.0 protocol=tcp jump=ACCEPT destination_port={{ item }}
    with_items:
    - 80
    - 443
    register: iptables

  - name: Restart docker of iptables changes
    service: name=docker state=restarted
    when: iptables.changed

  - name: Turn off SELinux
    selinux: policy=targeted state=permissive

  - name: Install docker-compose via python pip
    pip: name=docker-compose

  - name: Force installation of 'docker-py version 1.9.0'
    shell: pip install 'docker-py==1.9.0' --force-reinstall

  - name: Login to docker hub
    docker_login:
      username: '{{ username }}'
      email: '{{ email }}'
      password: '{{ password }}'

  - name: Create a docker network
    command: docker network create ci
    ignore_errors: True

  - name: Put docker-py back to version 1.10.6
    shell: pip install 'docker-py==1.10.6' --force-reinstall

  - name: Deploy jenkins via "deploy-jenkins.yml", with specified variables
    include: deploy-jenkins.yml
    vars:
      project_name: jenkins
      ssl_key_file: mycasebook.key
      ssl_crt_file: mycasebook.crt
      ssl_path: /etc/nginx/ssl
      nginx_conf_fullpath: /etc/nginx/nginx.conf
      subdomain_name: ci.mycasebook.org
    tags: jenkins

  - name: Remove stopped containers older than a week
    shell: docker ps -a | awk '/Exited/ && /weeks ago/ {print "docker rm", $1}' | sh

  - name: Remove images of stopped containers except for those still in use
    shell: docker images -qa | { xargs -r docker rmi; echo; }

  - name: Remove dangling volumes
    shell: docker volume ls -qf dangling=true | xargs -r docker volume rm

- include: ../shared/add-datadog-agent.yml
  vars:
    hosts: jenkins-node

- include: ../shared/cleanup.yml
